import { Component, EventEmitter, Input, NgZone, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../pdf-shy-button/pdf-shy-button.component";
import * as i2 from "../../responsive-visibility";
export class PdfToggleSidebarComponent {
    constructor(ngZone) {
        this.ngZone = ngZone;
        this.show = true;
        this.sidebarVisible = false;
        this.showChange = new EventEmitter();
        const emitter = this.showChange;
        this.onClick = () => {
            const PDFViewerApplication = window.PDFViewerApplication;
            const newVisibility = !PDFViewerApplication.pdfSidebar.isOpen;
            emitter.emit(newVisibility);
            PDFViewerApplication.eventBus.dispatch('toggleSidebar', { visible: newVisibility });
        };
    }
}
/** @nocollapse */ PdfToggleSidebarComponent.ɵfac = function PdfToggleSidebarComponent_Factory(t) { return new (t || PdfToggleSidebarComponent)(i0.ɵɵdirectiveInject(i0.NgZone)); };
/** @nocollapse */ PdfToggleSidebarComponent.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: PdfToggleSidebarComponent, selectors: [["pdf-toggle-sidebar"]], inputs: { show: "show", sidebarVisible: "sidebarVisible" }, outputs: { showChange: "showChange" }, decls: 2, vars: 8, consts: [["title", "Toggle Sidebar", "primaryToolbarId", "primarySidebarToggle", "l10nId", "toggle_sidebar", "l10nLabel", "toggle_sidebar_label", "image", "<svg style='width: 24px; height: 24px' viewBox='0 0 24 24'> <path fill='currentColor' d='M3,9H17V7H3V9M3,13H17V11H3V13M3,17H17V15H3V17M19,17H21V15H19V17M19,7V9H21V7H19M19,13H21V11H19V13Z' /> </svg>", 3, "cssClass", "toggled", "order", "closeOnClick", "action"]], template: function PdfToggleSidebarComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelement(0, "pdf-shy-button", 0);
        i0.ɵɵpipe(1, "responsiveCSSClass");
    } if (rf & 2) {
        i0.ɵɵproperty("cssClass", i0.ɵɵpipeBind2(1, 5, ctx.show, "always-visible"))("toggled", ctx.sidebarVisible === true)("order", 4500)("closeOnClick", true)("action", ctx.onClick);
    } }, directives: [i1.PdfShyButtonComponent], pipes: [i2.ResponsiveCSSClassPipe], styles: ["[_nghost-%COMP%]:focus{outline:none}button[_ngcontent-%COMP%]:focus{outline:none}svg[_ngcontent-%COMP%]:focus{outline:none}button#sidebarToggle[_ngcontent-%COMP%]{height:24px;width:24px;margin-right:5px!important}button[_ngcontent-%COMP%]{padding:0}"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PdfToggleSidebarComponent, [{
        type: Component,
        args: [{ selector: 'pdf-toggle-sidebar', template: "<pdf-shy-button\r\n  title=\"Toggle Sidebar\"\r\n  primaryToolbarId=\"primarySidebarToggle\"\r\n  [cssClass]=\"show | responsiveCSSClass : 'always-visible'\"\r\n  [toggled]=\"sidebarVisible === true\"\r\n  l10nId=\"toggle_sidebar\"\r\n  l10nLabel=\"toggle_sidebar_label\"\r\n  [order]=\"4500\"\r\n  [closeOnClick]=\"true\"\r\n  [action]=\"onClick\"\r\n  image=\"<svg style='width: 24px; height: 24px' viewBox='0 0 24 24'> <path fill='currentColor' d='M3,9H17V7H3V9M3,13H17V11H3V13M3,17H17V15H3V17M19,17H21V15H19V17M19,7V9H21V7H19M19,13H21V11H19V13Z' /> </svg>\"\r\n>\r\n</pdf-shy-button>\r\n", styles: [":host:focus{outline:none}button:focus{outline:none}svg:focus{outline:none}button#sidebarToggle{height:24px;width:24px;margin-right:5px!important}button{padding:0}\n"] }]
    }], function () { return [{ type: i0.NgZone }]; }, { show: [{
            type: Input
        }], sidebarVisible: [{
            type: Input
        }], showChange: [{
            type: Output
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGRmLXRvZ2dsZS1zaWRlYmFyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1leHRlbmRlZC1wZGYtdmlld2VyL3NyYy9saWIvdG9vbGJhci9wZGYtdG9nZ2xlLXNpZGViYXIvcGRmLXRvZ2dsZS1zaWRlYmFyLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1leHRlbmRlZC1wZGYtdmlld2VyL3NyYy9saWIvdG9vbGJhci9wZGYtdG9nZ2xlLXNpZGViYXIvcGRmLXRvZ2dsZS1zaWRlYmFyLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7O0FBUy9FLE1BQU0sT0FBTyx5QkFBeUI7SUFZcEMsWUFBb0IsTUFBYztRQUFkLFdBQU0sR0FBTixNQUFNLENBQVE7UUFWM0IsU0FBSSxHQUF5QixJQUFJLENBQUM7UUFHbEMsbUJBQWMsR0FBd0IsS0FBSyxDQUFDO1FBRzVDLGVBQVUsR0FBRyxJQUFJLFlBQVksRUFBVyxDQUFDO1FBSzlDLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUM7UUFDaEMsSUFBSSxDQUFDLE9BQU8sR0FBRyxHQUFHLEVBQUU7WUFDbEIsTUFBTSxvQkFBb0IsR0FBMkIsTUFBYyxDQUFDLG9CQUFvQixDQUFDO1lBQ3pGLE1BQU0sYUFBYSxHQUFHLENBQUMsb0JBQW9CLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQztZQUM5RCxPQUFPLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1lBQzVCLG9CQUFvQixDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsZUFBZSxFQUFFLEVBQUUsT0FBTyxFQUFFLGFBQWEsRUFBRSxDQUFDLENBQUM7UUFDdEYsQ0FBQyxDQUFDO0lBQ0osQ0FBQzs7cUhBcEJVLHlCQUF5QjsyR0FBekIseUJBQXlCO1FDVHRDLG9DQVlpQjs7O1FBVGYsMkVBQXlELHdDQUFBLGVBQUEsc0JBQUEsdUJBQUE7O3VGRE05Qyx5QkFBeUI7Y0FMckMsU0FBUzsyQkFDRSxvQkFBb0I7eURBTXZCLElBQUk7a0JBRFYsS0FBSztZQUlDLGNBQWM7a0JBRHBCLEtBQUs7WUFJQyxVQUFVO2tCQURoQixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBOZ1pvbmUsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBJUERGVmlld2VyQXBwbGljYXRpb24gfSBmcm9tICcuLi8uLi9vcHRpb25zL3BkZi12aWV3ZXItYXBwbGljYXRpb24nO1xyXG5pbXBvcnQgeyBSZXNwb25zaXZlVmlzaWJpbGl0eSB9IGZyb20gJy4uLy4uL3Jlc3BvbnNpdmUtdmlzaWJpbGl0eSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ3BkZi10b2dnbGUtc2lkZWJhcicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3BkZi10b2dnbGUtc2lkZWJhci5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vcGRmLXRvZ2dsZS1zaWRlYmFyLmNvbXBvbmVudC5jc3MnXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIFBkZlRvZ2dsZVNpZGViYXJDb21wb25lbnQge1xyXG4gIEBJbnB1dCgpXHJcbiAgcHVibGljIHNob3c6IFJlc3BvbnNpdmVWaXNpYmlsaXR5ID0gdHJ1ZTtcclxuXHJcbiAgQElucHV0KClcclxuICBwdWJsaWMgc2lkZWJhclZpc2libGU6IGJvb2xlYW4gfCB1bmRlZmluZWQgPSBmYWxzZTtcclxuXHJcbiAgQE91dHB1dCgpXHJcbiAgcHVibGljIHNob3dDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPGJvb2xlYW4+KCk7XHJcblxyXG4gIHB1YmxpYyBvbkNsaWNrOiAoKSA9PiB2b2lkO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG5nWm9uZTogTmdab25lKSB7XHJcbiAgICBjb25zdCBlbWl0dGVyID0gdGhpcy5zaG93Q2hhbmdlO1xyXG4gICAgdGhpcy5vbkNsaWNrID0gKCkgPT4ge1xyXG4gICAgICBjb25zdCBQREZWaWV3ZXJBcHBsaWNhdGlvbjogSVBERlZpZXdlckFwcGxpY2F0aW9uID0gKHdpbmRvdyBhcyBhbnkpLlBERlZpZXdlckFwcGxpY2F0aW9uO1xyXG4gICAgICBjb25zdCBuZXdWaXNpYmlsaXR5ID0gIVBERlZpZXdlckFwcGxpY2F0aW9uLnBkZlNpZGViYXIuaXNPcGVuO1xyXG4gICAgICBlbWl0dGVyLmVtaXQobmV3VmlzaWJpbGl0eSk7XHJcbiAgICAgIFBERlZpZXdlckFwcGxpY2F0aW9uLmV2ZW50QnVzLmRpc3BhdGNoKCd0b2dnbGVTaWRlYmFyJywgeyB2aXNpYmxlOiBuZXdWaXNpYmlsaXR5IH0pO1xyXG4gICAgfTtcclxuICB9XHJcbn1cclxuIiwiPHBkZi1zaHktYnV0dG9uXHJcbiAgdGl0bGU9XCJUb2dnbGUgU2lkZWJhclwiXHJcbiAgcHJpbWFyeVRvb2xiYXJJZD1cInByaW1hcnlTaWRlYmFyVG9nZ2xlXCJcclxuICBbY3NzQ2xhc3NdPVwic2hvdyB8IHJlc3BvbnNpdmVDU1NDbGFzcyA6ICdhbHdheXMtdmlzaWJsZSdcIlxyXG4gIFt0b2dnbGVkXT1cInNpZGViYXJWaXNpYmxlID09PSB0cnVlXCJcclxuICBsMTBuSWQ9XCJ0b2dnbGVfc2lkZWJhclwiXHJcbiAgbDEwbkxhYmVsPVwidG9nZ2xlX3NpZGViYXJfbGFiZWxcIlxyXG4gIFtvcmRlcl09XCI0NTAwXCJcclxuICBbY2xvc2VPbkNsaWNrXT1cInRydWVcIlxyXG4gIFthY3Rpb25dPVwib25DbGlja1wiXHJcbiAgaW1hZ2U9XCI8c3ZnIHN0eWxlPSd3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4JyB2aWV3Qm94PScwIDAgMjQgMjQnPiA8cGF0aCBmaWxsPSdjdXJyZW50Q29sb3InIGQ9J00zLDlIMTdWN0gzVjlNMywxM0gxN1YxMUgzVjEzTTMsMTdIMTdWMTVIM1YxN00xOSwxN0gyMVYxNUgxOVYxN00xOSw3VjlIMjFWN0gxOU0xOSwxM0gyMVYxMUgxOVYxM1onIC8+IDwvc3ZnPlwiXHJcbj5cclxuPC9wZGYtc2h5LWJ1dHRvbj5cclxuIl19